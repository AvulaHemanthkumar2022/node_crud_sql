const Employee = require('../models/Employee');

exports.createEmployee = (req, res) => {
    Employee.create(req.body, (error, results) => {
        if (error) {
            console.error('Error creating employee:', error);
            return res.status(500).json({ message: 'Server error' });
        }
        res.status(201).json({ id: results.insertId, ...req.body });
    });
};

exports.getEmployees = (req, res) => {
    Employee.getAll((error, results) => {
        if (error) {
            console.error('Error fetching employees:', error);
            return res.status(500).json({ message: 'Server error' });
        }
        res.status(200).json(results);
    });
};

exports.getEmployeeById = (req, res) => {
    Employee.getById(req.params.id, (error, results) => {
        if (error) {
            console.error('Error fetching employee:', error);
            return res.status(500).json({ message: 'Server error' });
        }
        if (results.length === 0) {
            return res.status(404).json({ message: 'Employee not found' });
        }
        res.status(200).json(results[0]);
    });
};

exports.updateEmployee = (req, res) => {
    Employee.update(req.params.id, req.body, (error, results) => {
        if (error) {
            console.error('Error updating employee:', error);
            return res.status(500).json({ message: 'Server error' });
        }
        if (results.affectedRows === 0) {
            return res.status(404).json({ message: 'Employee not found' });
        }
        res.status(200).json({ id: req.params.id, ...req.body });
    });
};

exports.deleteEmployee = (req, res) => {
    Employee.delete(req.params.id, (error, results) => {
        if (error) {
            console.error('Error deleting employee:', error);
            return res.status(500).json({ message: 'Server error' });
        }
        if (results.affectedRows === 0) {
            return res.status(404).json({ message: 'Employee not found' });
        }
        res.status(200).json({ message: 'Employee deleted' });
    });
};
